<sw-page class="moorl-merchant-finder-list">
    <sw-sidebar slot="sidebar">
        <sw-sidebar-item icon="default-arrow-360-left"
                         :title="$t('moorl-foundation.buttons.refreshButtonText')"
                         @click="onRefresh"></sw-sidebar-item>

        <sw-sidebar-item icon="default-action-cloud-upload"
                         :title="$t('moorl-foundation.buttons.importButtonText')"
                         @click="onImportModal"></sw-sidebar-item>

        <sw-sidebar-item icon="default-action-cloud-download"
                         :title="$t('moorl-foundation.buttons.exportButtonText')"
                         @click="onExportModal"></sw-sidebar-item>

        <sw-sidebar-item icon="default-object-globe"
                         :title="$t('moorl-foundation.getLocation.title')"
                         @click="onClickGetLocation"></sw-sidebar-item>
    </sw-sidebar>

    <template slot="smart-bar-actions">
        <sw-button variant="primary" :routerLink="{ name: 'moorl.merchant.finder.create' }">
            {{ $t('moorl-foundation.buttons.addMerchantButtonText') }}
        </sw-button>
    </template>

    <template #language-switch>
        <sw-language-switch slot="language-switch" @on-change="onChangeLanguage"></sw-language-switch>
    </template>

    <template slot="content">
        <sw-loader v-if="isImporting"></sw-loader>

        <sw-entity-listing
                v-if="merchants"
                :items="merchants"
                :repository="repository"
                :showSelection="true"
                :columns="columns"
                :isLoading="isLoading"
                detailRoute="moorl.merchant.finder.detail"
                @select-item="updateSelection"
                @update-records="updateTotal">

            <template #column-active="{ item, isInlineEdit }">
                <template v-if="isInlineEdit">
                    <sw-checkbox-field v-model="item.active"></sw-checkbox-field>
                </template>
                <template v-else>
                    <sw-icon v-if="item.active" name="small-default-checkmark-line-medium" small class="is--active"></sw-icon>
                    <sw-icon v-else name="small-default-x-line-medium" small class="is--inactive"></sw-icon>
                </template>
            </template>

            <template #column-countryCode="{ item }">
                <span>{{ item.countryCode }}-{{ item.zipcode }}</span>
            </template>

            <template #column-locationLon="{ item }">
                <span>{{ item.locationLon }}|{{ item.locationLat }}</span>
            </template>
        </sw-entity-listing>

        <sw-modal v-if="showLocModal"
                  @modal-close="onCloseModal"
                  :title="$t('moorl-foundation.getLocation.title')"
                  variant="default">
            <sw-field type="switch"
                      bordered
                      :label="$t('moorl-foundation.getLocation.overwrite')" v-model="getLocation.overwrite"></sw-field>

            <sw-field type="switch"
                      bordered
                      :label="$t('moorl-foundation.getLocation.skipError')" v-model="getLocation.skipError"></sw-field>

            <div v-if="getLocation.data.length > 0">
                <div class="sw-field">
                    {{ $t('moorl-foundation.import.processText', { count: getLocation.total , remaining: getLocation.data.length }) }}
                </div>
            </div>

            <template #modal-footer>
                <sw-button @click="onCloseModal" size="small">
                    {{ $t('moorl-foundation.buttons.cancelButtonText') }}
                </sw-button>
                <sw-button variant="primary"
                           @click="onStartGetLocation"
                           size="small">
                    {{ $t('moorl-foundation.buttons.startButtonText') }}
                </sw-button>
            </template>
        </sw-modal>

        <moorl-csv-import
                v-if="showImportModal"
                entity="moorl_merchant"
                :onCloseModal="onCloseModal"
                :onFinishImport="getItems"></moorl-csv-import>

        <moorl-csv-export
                v-if="showExportModal"
                entity="moorl_merchant"
                :onCloseModal="onCloseModal"
                :selectedItems="selectedItems"></moorl-csv-export>
    </template>
</sw-page>
